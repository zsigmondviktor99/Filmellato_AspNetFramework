@model IEnumerable<Filmellato.Models.Customer>
@*
*@

@{ ViewBag.Title = "Ügyfelek";
                Layout = "~/Views/Shared/_Layout.cshtml"; }

<h2>Ügyfelek</h2>

<a href="/customers/new" class="btn btn-primary">Ügyfél hozzáadása</a>
<br />
<br />

<table id="customers" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>Id</th>
            <th>Ügyfél</th>
            <th>Blokkolva</th>
            <th>Tagság</th>
            <th>Bérelt filmek</th>
            <th>Módosítás</th>
            <th>Törlés</th>
        </tr>
    </thead>
    <tbody>
        @*Helytarto a DataTable plugin szamara*@
    </tbody>
</table>

@section scripts
{
    <script>
        //Amikor a DOM teljesen betoltott
        $(document).ready(function () {
            var table = $("#customers").DataTable({
                //Konfiguracios objektum >> hogy a Customers API legyen a tablazat adatforrasa
                ajax: {
                    url: "/api/customers",

                    //Az adatokat objektumok tombjekent kapjuk meg
                    dataSrc: ""
                },
                //Oszlopok >> az adatok JSON formatumban jonnek az API-bol tomb formajaban
                columns: [
                    {
                        data: "id",
                    },
                    {
                        data: "name",
                        render: function (data, type, customer) {
                            return "<a href='/customers/details/" + customer.id + "'>" + data + "</a>";
                        }
                    },
                    {
                        data: "isBlocked",
                        render: function (data) {
                            if (data) {
                                return "<b style='color: red;'>Igen</b>";
                            }
                            else {
                                return "Nem";
                            }
                        }
                    },
                    {
                        data: "membershipType.membershipName"
                    },
                    {
                        data: "numberOfCurrentlyRentedMovies"
                    },
                    {
                        data: "id",
                        render: function (data, type, customer) {
                            return "<a href='/customers/edit/" + customer.id + "'>Módosítás</a>";
                        }
                    },
                    {
                        data: "id",
                        render: function (data) {
                            return "<button class='btn-link js-delete' data-customer-id=" + data + ">Törlés</button>";
                        }
                    }
                ]
            });


            //Adat hozzaferes
            $("#customers").on("click", ".js-delete", function () {
                var button = $(this);
                //Ha a felhasznalo az OK-ra nyom, itt hivjuk meg az API-t
                bootbox.confirm("Biztosan törölni akarod az ügyfelet?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/customers/" + button.attr("data-customer-id"),
                            method: "DELETE",
                            success: function () {
                                //Itt toroljuk az ugyfelet az adatbazisbol, es a DOM-bol (tablazat) is
                                table.row(button.parents("tr")).remove().draw();
                            }
                        })
                            .done(function () {
                                //Siker
                                toastr.success("Ügyfél sikeresen törölve.");
                            })
                            .fail(function () {
                                //Hiba
                                toastr.error("Nem törölhetsz ügyfelet, ha van nála kibérelt film.");
                            });
                    }
                });
            });
        });
    </script>
}

