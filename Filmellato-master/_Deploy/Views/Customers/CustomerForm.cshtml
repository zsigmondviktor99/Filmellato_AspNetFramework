@model Filmellato.ViewModels.CustomerFormViewModel
@{
    ViewBag.Title = "Save";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Title</h2>

@*1. arg: Name of target ACTION that should be called when we POST this form*@
@*2. arg: Controller name*@
@using (Html.BeginForm("Save", "Customers"))
{
    //Html.BeginForm() >> <form>

    //Validation error on the top of the form as well
    @Html.ValidationSummary(true, "Please fix the following errors.");

    //Bootstrap class
    <div class="form-group">
        @*Lambda >> specifies the name of the target property in the model use in
            this form >> model = Customer (up) >> Label for the textbox that specifies
            the customer's name*@
        @Html.LabelFor(m => m.Customer.Name)

        @*Lambda's second argument is an anonymus object for HTML attributes
            form-control >> modern looking by Bootstrap*@
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })

        @*Validation message placeholder*@
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId, "Membership Type")

        @*Second argument has to be the list of our Membership Types >>

            SelectList() >> ASP.NET's initialization for Dropdown lists
            >> first argument is the list of items, second is the name of the
            property in MembershipType class that holds the value for each item,
            the third argument is the property that holds the text for each item

            The "Select Membership Type" argument between the two Anonymus object
            will be the first row on the top of the Dropdown list*@
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "MembershipName"), "Select Membership Type", new { @class = "form-control" })

        @*Validation message placeholder*@
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.BirthDate, "Date of Birth")
        @Html.TextBoxFor(m => m.Customer.BirthDate, Model.Customer.BirthDate.Value.ToString("yyyy-MM-dd"), new { @class = "form-control" })

        @*Validation message placeholder*@
        @Html.ValidationMessageFor(m => m.Customer.BirthDate)
    </div>

    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsletter) Subscribed to Newsletter?
        </label>
    </div>

    //Hidden field for the CustomerId
    @Html.HiddenFor(m => m.Customer.Id)

    //CSRF
    @Html.AntiForgeryToken()

    <button type="submit" class="btn btn-primary">Save</button>

    /*
    End of using block >>
    Object return from Html.BeginForm() will be DISPOSED >>
    render </form>
    */
}

@section Scripts
{
    @*With this script we can enable client-side validation*@
    @Scripts.Render("~/bundles/jqueryval")
}